class AppUser: # создание класса (ПаскальКейс)
    pass # пропуск шага (на случай, если решил накидать новых классов, функций или ещё чего-то с отступами, но решил оставить заполнение на потом)

user1 = AppUser() # создание объекта из класса
user1.id = "001" # присвоение атрибутов объекту (не классу)
user1.name = "angela" 

print(user1.name) # атрибут ассоциируется с объектом
# print(AppUser.name) но не с классом (будет ошибка)

class User():
    def __init__(self, user_id, user_name): # инициализация (присвоение) атрибутов классу - функция: __init__ и перечисление параметров функции.  self - сам обьект, который будет создан из класса.
        self.id = user_id # присвоение значений атрибутам. Атрибут - self.id . user_id - параметр, который будет заменен аргументов (как в функции)
        self.user_name = user_name 
        self.followers = 0 # атрибут с дефолтным значением, который не обьявляется как параметр функции, чтобы не вводить одно и тоже значение при каждом (вызове) создании объекта

user_1 = User("AR-1", "kisa") #создание объекта из класса с указанием значений атрибутов: user_1.id = "AR-1" ; user_1.user_name = "kisa"
user_2 = User("AR-2", "katsman")
print(user_2.id, user_2.user_name) # вывод: AR-2 katsman
print(user_1.followers) # вывод: 0 - так как это дефолтное значение, указанное в атрибуте класса
user_1.followers = 50 # но его можно изменить для каждого отдельного объекта
print(user_1.followers) # вывод: 50 - значение атрибута было изменено для конкретного объекта
